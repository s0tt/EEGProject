#task
task: "P3"

#electrode to pick
pick: "Pz"

#subjects to analyse
subjects_numbers: 
   - "002"
   - "009"
   - "040"

#execution mode
isOverwrite: False      #overwrite all existing data units with newly generated ones in the cleaning step 02_cleaning.py

isDialogeMode: False    #manual mode with opens dialogs windows for all the cleaning steps manually

isPrecomputeMode: True  #mode which uses precomputed semester project data for further analysis like Time-Frequency, Decoding, ERP analysis

isSpaceSaveMode: False  #When true deletes the .fif of the last pipeline step after it was processed --> Save disk space, 
                        #can make problems with parallelization 

# Band-pass filter limits
bandpass_fmin: 0.5  # Hz
bandpass_fmax: 50  # Hz TODO: Maybe try 45Hz
nr_filt_cycles: 1 #nr of filter cycles

#peak-to-peak reject criteria in ^-6 scaling
reject_subject_config:  200

# ICA
nr_ica_components: 20
ica_method: "picard"

#according to https://mne.tools/dev/auto_tutorials/preprocessing/plot_40_artifact_correction_ica.html
freq_highpass_ica: 1

# Bad ICA components for the selected subjects, is applied when using interactive mode
subject_ica_channels: {"002": [1, 9],
                       "009": [0, 5, 7, 13],
                       "040": [0, 2]}

#EEG data reference, alternative use "average"
reference: ["P9", "P10"] #"average"


# Event coding
event_coding: {
    "cond1": [11, 22, 33, 44, 55], #rare
    "cond2": [12, 13, 14, 15, 21, 23, 24, 25, 31, 32, 34, 35, 41, 42, 43, 45, 51, 52, 53, 54], #frequent
    "response": [201, 202] #correct response, wrong reponse --> Order is important here for my functions
}
event_names: {
    "cond1": "rare",
    "cond2": "frequent"
}

epoch_pick: "eeg"        #channel pick for epoch plots
analyse_pick: "eeg"      #channel pick for analyse topographies
grandAverage_pick: "eeg" #channel pick for grand average topographies

# ERP significance testing
alpha: 0.05
peak_window: [0.3, 0.6] #[tmin, tmax] time window for peak finding in grand average peak analysis


#Time-frequency Analysis
tf_baseline: None
tf_vmax: 6 #scaled with ^-10 (e-10 the python way)
tf_compute_pick: ["eeg"]
tf_analyze_pick: ["Pz"] #["Pz", "Cz", "CPz"]

#Decoding Analysis
decoding_models: ["LogisticRegression", "SVM"]
decode_maxiter: 1000        #number of model iterations to use
decode_sampling: 0.005      #discrete sample size for scores
decode_scoring: "roc_auc"   #model score must fit to sklearn models
decode_alpha: 0.05          #significane level for statistical tests